% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mplot.R
\name{mplot}
\alias{mplot}
\title{Generate a metaplot from a list of matrices.}
\usage{
mplot(
  matl,
  matlc = NULL,
  feature = "Gene",
  unit = "Coverage (BPM)",
  title = "Gene metaplot",
  breaks = c(0, 20, 60, 80),
  labels = c("-200", "TSS", "TTS", "+200"),
  colmap,
  split = NULL,
  facet = NULL,
  angle = 0,
  strip_fill = "white",
  facet_scale = "fixed",
  max_quantile = 1,
  min_quantile = 0,
  pseudo = 1,
  alpha = 1,
  linewidth = 0.5,
  error = F,
  alpha_error = 0.5,
  facet_nrow = 2,
  facet_type = "wrap",
  facet_independent = F,
  summarise_by = "mean",
  colour_by = "Sample"
)
}
\arguments{
\item{matl}{A list of matrices, where each matrix represents a sample and rows
correspond to genomic positions.}

\item{matlc}{An optional list of control matrices with the same dimensions and
structure as `matl`. If provided, the function will plot the log2 ratio of
`matl` to `matlc`. Defaults to `NULL`.}

\item{feature}{A string specifying the label for the x-axis (e.g., "Gene",
"Transcript"). Defaults to "Gene".}

\item{unit}{A string specifying the label for the y-axis (e.g., "Coverage (BPM)",
"Signal Intensity"). Defaults to "Coverage (BPM)".}

\item{title}{A string specifying the title of the plot. Defaults to "Gene metaplot".}

\item{breaks}{A numeric vector specifying the positions of the x-axis breaks.
Defaults to `c(0, 20, 60, 80)`.}

\item{labels}{A character vector specifying the labels for the x-axis breaks.
The length of `labels` must be the same as the length of `breaks`.
Defaults to `c("-200", "TSS", "TTS", "+200")`.}

\item{colmap}{A named vector of colors to use for different groups (defined by
`colour_by`). The names of the vector should correspond to the unique values
in the column specified by `colour_by`.}

\item{split}{An optional data frame whose rownames correspond to the rownames
of the matrices in `matl`. This data frame can contain columns to group the
data before plotting (e.g., by experimental condition). Defaults to `NULL`.}

\item{facet}{An optional string or vector of strings specifying the column(s)
in `split` to use for faceting the plot. Defaults to `NULL`.}

\item{angle}{A numeric value specifying the angle (in degrees) for the x-axis
labels. Defaults to `0`.}

\item{strip_fill}{A string specifying the fill color for the facet strip
background. Defaults to "white".}

\item{facet_scale}{A string specifying whether the scales should be fixed
("fixed"), free ("free"), free in the x direction ("free_x"), or free in
the y direction ("free_y"). Passed to `facet_wrap` or `facet_grid2`.
Defaults to "fixed".}

\item{max_quantile}{A numeric value between 0 and 1 specifying the upper
quantile to use for outlier removal when calculating the mean or sum.
Defaults to `1` (no upper outlier removal).}

\item{min_quantile}{A numeric value between 0 and 1 specifying the lower
quantile to use for outlier removal when calculating the mean or sum.
Defaults to `0` (no lower outlier removal).}

\item{pseudo}{A numeric value added to both `matl` and `matlc` before log2
transformation to avoid taking the logarithm of zero. Only used when
`matlc` is provided. Defaults to `1`.}

\item{alpha}{A numeric value between 0 and 1 specifying the alpha (transparency)
of the lines. Defaults to `1` (fully opaque).}

\item{linewidth}{A numeric value specifying the width of the lines. Defaults
to `0.5`.}

\item{error}{A logical value indicating whether to plot error bars (standard
error of the mean). Only applicable when `summarise_by = "mean"`.
Defaults to `FALSE`.}

\item{alpha_error}{A numeric value between 0 and 1 specifying the alpha
(transparency) of the error bar ribbons. Defaults to `0.5`.}

\item{facet_nrow}{An integer specifying the number of rows to use when
`facet_type = "wrap"`. Defaults to `2`.}

\item{facet_type}{A string specifying the faceting type. Can be "wrap"
(using `facet_wrap`) or "grid" (using `facet_grid2`). Defaults to "wrap".}

\item{facet_independent}{A logical value indicating whether the scales should
be independent for each panel in `facet_grid2`. Only used when
`facet_type = "grid"`. Defaults to `FALSE`.}

\item{summarise_by}{A string specifying how to summarise the data within
groups. Can be "mean" or "sum". Defaults to "mean".}

\item{colour_by}{A string specifying the column name in the combined data frame
(or in `split` if provided) to use for coloring the lines. Defaults to
"Sample".}
}
\value{
A ggplot object representing the metaplot.
}
\description{
This function takes a list of matrices (e.g., coverage values across genomic regions)
and generates a metaplot, optionally comparing it to a control list of matrices.
It provides flexibility in grouping, faceting, and displaying error bars.
}
\examples{
# Create some dummy data
set.seed(123)
mat1 <- matrix(rnorm(100), nrow = 10)
mat2 <- matrix(rnorm(100, 0.5), nrow = 10)
matl_example <- list(sample1 = mat1, sample2 = mat2)
rownames(mat1) <- rownames(mat2) <- paste0("gene", 1:10)

# Basic metaplot
mplot(matl_example)

# Metaplot with custom title and axis labels
mplot(matl_example, title = "My Metaplot", feature = "Region", unit = "Signal")

# Metaplot with custom colors
col_map <- c("sample1" = "blue", "sample2" = "red")
mplot(matl_example, colmap = col_map)

# Add a splitting factor
split_df <- data.frame(condition = rep(c("A", "B"), each = 5),
                       row.names = paste0("gene", 1:10))
mplot(matl_example, split = split_df, colour_by = "condition")

# Facet the plot
mplot(matl_example, split = split_df, facet = "condition")

# Metaplot with control data
matlc_example <- list(sample1 = matrix(rnorm(100, 0.1), nrow = 10),
                      sample2 = matrix(rnorm(100, 0.2), nrow = 10))
rownames(matlc_example[[1]]) <- rownames(matlc_example[[2]]) <- paste0("gene", 1:10)
mplot(matl_example, matlc = matlc_example, unit = "log2(Treatment/Control)")

# Metaplot with error bars
mplot(matl_example, error = TRUE)

}
